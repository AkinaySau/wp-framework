<?php
/**
 * Created by PhpStorm.
 * User: AkinaySau(akinaysau@gmail.com)
 * Date: 19.12.18
 * Time: 10:25
 *
 * @package wp-framework
 */

namespace Sau\WP\Framework\Bundle\ThemeBundle;


use Sau\WP\Framework\Bundle\ThemeBundle\DependencyInjection\Compiler\RegistrationPass;
use Sau\WP\Framework\Bundle\ThemeBundle\Event\ActionEvent;
use Symfony\Component\DependencyInjection\ContainerBuilder;
use Symfony\Component\DependencyInjection\ContainerInterface;
use Symfony\Component\HttpKernel\Bundle\Bundle;

class ThemeBundle extends Bundle
{
    /**
     * @var ContainerInterface
     */
    protected $container;

    public function boot()
    {
        if ($this->container->has('theme.configuration') && $this->container->has('theme.registration_loader')) {
            $configuration = $this->container->get('theme.configuration');

            $this->container->get('theme.registration_loader')
                            ->load($configuration);
        }


        $ed = $this->container->get('event_dispatcher');
        $ed->dispatch(ActionEvent::NAME, new ActionEvent());

    }

    public function build(ContainerBuilder $container)
    {
        parent::build($container); // TODO: Change the autogenerated stub
        $container->addCompilerPass(new RegistrationPass());
    }

}
